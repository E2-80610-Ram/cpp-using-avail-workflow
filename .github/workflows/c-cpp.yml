name: C/C++ CI/CD Pipeline with Apptainer

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    name: build

    steps:
    - uses: actions/checkout@v3

    - name: Set up GCC
      run: sudo apt-get update && sudo apt-get install -y build-essential

    - name: Build the application
      run: make

    - name: Clean up after build
      run: make clean

  test:
    runs-on: ubuntu-latest
    needs: build
    name : test

    steps:
    - uses: actions/checkout@v3

    - name: Set up GCC for testing
      run: sudo apt-get update && sudo apt-get install -y build-essential

    - name: Build for testing
      run: make

    - name: Run tests
      run: |
        chmod +x ./test.sh
        ./test.sh

    - name: Clean up after testing
      run: make clean

  deploy:
    runs-on: ubuntu-latest
    needs: [build, test]
    name: deploy

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies for Apptainer
      run: |
        sudo apt-get update && sudo apt-get install -y \
          build-essential \
          libseccomp-dev \
          pkg-config \
          squashfs-tools \
          cryptsetup \
          wget \
          git \
          uuid-dev \
          libgpgme-dev \
          libseccomp-dev \
          pkg-config \
          golang-go

    - name: Install Go 1.21
      run: |
        wget https://go.dev/dl/go1.21.0.linux-amd64.tar.gz
        sudo tar -C /usr/local -xzf go1.21.0.linux-amd64.tar.gz
        echo "export PATH=\$PATH:/usr/local/go/bin" >> ~/.bashrc
        source ~/.bashrc

    - name: Install Apptainer (Singularity)
      run: |
        git clone https://github.com/apptainer/apptainer.git
        cd apptainer
        ./mconfig
        cd builddir
        make
        sudo make install

    - name: Build Singularity Image
      run: singularity build cicd.sif singularity.def

    - name: Create Dockerfile for SIF Image
      run: |
        echo "FROM alpine:latest" > Dockerfile
        echo "RUN apk --no-cache add singularity" >> Dockerfile
        echo "COPY cicd.sif /usr/local/bin/cicd.sif" >> Dockerfile
        echo 'ENTRYPOINT ["singularity", "exec", "/usr/local/bin/cicd.sif"]' >> Dockerfile
        echo 'CMD ["./hello"]' >> Dockerfile

    - name: Build Docker Image
      run: docker build -t rambajgire/cicd:singularity .

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Push Docker Image to Docker Hub
      run: docker push rambajgire/cicd:singularity
